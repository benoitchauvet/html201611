<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
		<title>Paint it !</title>
		<meta charset="utf-8">
		
		
		
		<style>
		body {
			text-align:center; 
			background:#e9e9e9
		}

		h1 {
			text-transform:uppercase; 
			font-family:Verdana; 
			color:#000
		}

		#canvas {
			border:5px ridge #999; 
			border-radius:2px; 
			margin:0 auto 20px auto; 
			display:block; 
			background:#fff; 
			cursor:crosshair
		}

		#couleurs {
			list-style:none; 
			margin:0 0 20px 0; 
			padding:0
		}
		#couleurs li {
			display:inline-block
		}

		#couleurs a {
			display:inline-block; 
			width:30px; 
			height:30px; 
			margin-right:10px; 
			text-indent:-4000px;
			overflow:hidden; 
			border-radius:50%
		}

		#couleurs a.actif {
			border:2px solid #000; 
			width:26px; 
			height:26px
		}
		</style>
    </head>
    <body>
		<h1>Paint it</h1>
		
        <canvas id="canvas" width="600" height="400"></canvas>
		
		<ul id="couleurs">
			<li><a href="#" data-couleur="#000000" class="actif"></a></li>
			<li><a href="#" data-couleur="#ffffff"></a></li>
			<li><a href="#" data-couleur="#ff0000"></a></li>
			<li><a href="#" data-couleur="brown"></a></li>
			<li><a href="#" data-couleur="orange"></a></li>
			<li><a href="#" data-couleur="yellow"></a></li>
			<li><a href="#" data-couleur="green"></a></li>
			<li><a href="#" data-couleur="cyan"></a></li>
			<li><a href="#" data-couleur="blue"></a></li>
			<li><a href="#" data-couleur="indigo"></a></li>
			<li><a href="#" data-couleur="Violet"></a></li>
			<li><a href="#" data-couleur="hotpink"></a></li>
		</ul>
		
		<form id="largeurs_pinceau">
			<label for="largeur_pinceau">Largeur du pinceau :</label>
			<input id="largeur_pinceau" min="2" max="50" value="2" type="range">
			<output id="output">5 pixels</output>
			<br>
			<label for="opacite">Opacité :</label>
			<input id="opacite" min="0" max="10" value="6" type="range">
			<br>
			<input id="fillColor" value="#fa05cf" type="color">
			<input id="fill" value="Remplir" type="button">
			<br>
			
			<input id="reset" value="Réinitialiser" type="reset">
			<input id="save" value="Sauvergarder mon image" type="button">
		</form>
		
		<p>
			<a href="http://www.html5canvastutorials.com/">tuto...</a>
		</p>
		
		<script type="text/javascript" src="js/jquery.js"></script>
		
	  <script>
	  
		window.onload = function() {
			
			// Variables :
			var color = "#000";
			var painting = false;
			var started = false;
			var width_brush = 5;
			var canvas = document.getElementById("canvas");
			var cursorX, cursorY;
			var restoreCanvasArray = [];
			var restoreCanvasIndex = 0;
			
			var context = canvas.getContext('2d');
			
			// fond blanc :
			context.fillStyle = "#FFF";
			context.fillRect(0,0,canvas.width,canvas.height);
			
			// Trait arrondi :
			context.lineJoin = 'round';
			context.lineCap = 'round';
			
			// Click souris enfoncé sur le canvas, je dessine :
			canvas.onmousedown = function(e) {
				if (e.button == 0)
				{
					painting = true;
					// Coordonnées de la souris :
					cursorX = (e.pageX - this.offsetLeft);
					cursorY = (e.pageY - this.offsetTop);
				}
			};
			
			// Relachement du Click sur tout le document, j'arrête de dessiner :
			document.onmouseup = function(e) {
				if (e.button == 0)
				{
					painting = false;
					started = false;
				}
			};
			
			// Mouvement de la souris sur le canvas :
			canvas.onmousemove = function(e) {
				// Si je suis en train de dessiner (click souris enfoncé) :
				if (painting == true) {
					// Set Coordonnées de la souris :
					cursorX = (e.pageX - this.offsetLeft) - 10; // 10 = décalage du curseur
					cursorY = (e.pageY - this.offsetTop) - 10;
					
					// Dessine une ligne :
					if (!started) {
					// Je place mon curseur pour la première fois :
					context.beginPath();
					context.moveTo(cursorX, cursorY);
					started = true;
					} 
					// Sinon je dessine
					else {
						context.lineTo(cursorX, cursorY);
						context.strokeStyle = color;
						context.lineWidth = width_brush;
						context.stroke();
					}
				}
			};
			
			
			// Clear du Canvas :
			function clear_canvas() {
			context.fillStyle = "#FFF";
			context.fillRect(0,0,canvas.width,canvas.height);
			}
			
			/*
			for (var lien of document.querySelectorAll("#couleurs a"))
			{
				lien.style.background = lien.getAttribute("data-couleur");
				lien.onclick = function()
				{
					color = lien.getAttribute("data-couleur");
					for (var lien2 of document.querySelectorAll("#couleurs a"))
					{
						lien2.classList.remove("actif");
						lien.classList.add("actif");
					}
				}
			}
			*/
			
			// Pour chaque carré de couleur :
			$("#couleurs a").each(function() {
				// Je lui attribue une couleur de fond :
				$(this).css("background", $(this).attr("data-couleur"));
				
				// Et au click :
				$(this).click(function() {
					// Je change la couleur du pinceau :
					color = $(this).attr("data-couleur");
					
					// Et les classes CSS :
					$("#couleurs a").removeAttr("class", "");
					$(this).attr("class", "actif");
					
					return false;
				});
			});
			
			
			// Largeur du pinceau :
			$("#largeur_pinceau").change(function() {
				if (!isNaN($(this).val())) {
					width_brush = $(this).val();
					$("#output").html($(this).val() + " pixels");
				}
			});
			
			// Bouton Reset :
			$("#reset").click(function() {
				// Clear canvas :
				clear_canvas();
				
				// Valeurs par défaut :
				$("#largeur_pinceau").attr("value", 5);
				width_brush = 5;
				$("#output").html("5 pixels");
				
			});
			
			// Bouton Save :
			$("#save").click(function() {
				//var r = new FileReader();
				var img = new Image();
				img.src = canvas.toDataURL("image/jpg");
				
				console.log(img.src);
				$("body").append(img);
				
			});
			
			// bouton remplir :
			$("#fill").click(function()
			{
				context.closePath();
				context.fillStyle =  hexToRgba($("#fillColor").val(), $("#opacite").val()/10);
				context.fill();
				context.beginPath();
				context.closePath();
				//context.stroke();
			});
			
		};
		
		function hexToRgba(hexColor, opacite)
		{
			var r = parseInt(hexColor.substring(1,3),16);
			var g = parseInt(hexColor.substring(3,5),16);
			var b = parseInt(hexColor.substring(5,7),16);
			var a = 1;
			if (opacite)
			{	
				a = opacite;
			}
			return "rgba(" + r + "," + g + "," + b + "," + a +")";
		}
		</script>
	
		

</body></html>